ggplot(mapping = aes(x = x,
y = y,
fill = z)) +
geom_raster() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
size = .25),
axis.ticks = element_line(color = "black",
size = .125),
legend.position = "top",
plot.margin = unit(c(.25, .75, .25, .75), "cm")) +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
fill = "Correlation") +
scale_y_continuous(expand = c(0, 0),
breaks = c(850, 900, 950, 1000, 1050),
labels = c("850", "900", "950", "1000", "1050"),
limits = c(850, 1050)) +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 950, 1000, 1050),
labels = c("850", "900", "950", "1000", "1050"),
limits = c(850, 1050)) +
scale_fill_continuous(type = "viridis")
grid.arrange(g05,
g06,
ncol = 2)
#| tbl-cap: "Comparisons of the '<tt>absorbance</tt>' and '<tt>dabsorbance</tt>' columns of the five first rows of the '<tt>tecator</tt>' dataset. The column labelled as '<tt>dabsorbance</tt>' is composed of '<tt>tfd</tt>' objects, and represents the first order derivative of the '<tt>absorbance</tt>' column, as computed via finite differences."
tecator_data = tecator_data |> mutate(dabsorbance = tf_derive(absorbance,
order = 1))
knitr::kable(head(tecator_data[c('fat', 'absorbance', 'dabsorbance')], 5), align = 'cc')
#| fig-cap: "Left panel: spaghetti plot of the derivative of the absorbance curves, separated by fat percentage. Right panel: mean derivative of the absorbance curves, separated by fat percentage."
g07 = tecator_data |>
ggplot(mapping = aes(y = dabsorbance,
color = fat20)) +
geom_spaghetti() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
linewidth = .25),
axis.ticks = element_line(color = "black",
linewidth = .125),
legend.position = "top") +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = substitute(paste(italic("D"), "Absorbance")),
col = "") +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 930, 950, 1000, 1050),
labels = c("850", "900", "930", "950", "1000", "1050"),
limits = c(845, 1055)) +
scale_color_manual(values = c("green", "orange"))
g08 = tecator_data |>
group_by(fat20) |> summarise(mean_dabsorbance = mean(dabsorbance)) |>
mutate(fat20 = factor(fat20,
levels = c("20% < Fat",
"20% > Fat",
"Overall"))) |>
add_row(fat20 = "Overall",
mean_dabsorbance = mean(tecator_data$dabsorbance)) |>
ggplot(mapping = aes(y = mean_dabsorbance,
color = factor(fat20,
levels = c("20% > Fat",
"20% < Fat",
"Overall")))) +
geom_spaghetti() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
linewidth = .25),
axis.ticks = element_line(color = "black",
linewidth = .125),
legend.position = "top") +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = substitute(paste(italic("D"), "Absorbance")),
col = "") +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 930, 950, 1000, 1050),
labels = c("850", "900", "930", "950", "1000", "1050"),
limits = c(845, 1055)) +
scale_color_manual(values = c("green", "orange", "red"))
grid.arrange(g07,
g08,
ncol = 2)
#| fig-cap: "Left panel: variance of the derivative of the absorbance curves, separated by fat percentage. Right panel: correlogram of the derivative of the absorbance curves."
g09 = tecator_data |>
group_by(fat20) |> summarise(var_dabsorbance = var(dabsorbance)) |>
mutate(fat20 = factor(fat20,
levels = c("20% < Fat",
"20% > Fat",
"Overall"))) |>
add_row(fat20 = "Overall",
var_dabsorbance = var(tecator_data$dabsorbance)) |>
ggplot(mapping = aes(y = var_dabsorbance,
color = factor(fat20,
levels = c("20% > Fat",
"20% < Fat",
"Overall")))) +
geom_spaghetti() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
linewidth = .25),
axis.ticks = element_line(color = "black",
linewidth = .125),
legend.position = "top") +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = substitute(paste("(", italic("D"), "Absorbance)"^2)),
col = "") +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 930, 950, 1000, 1050),
labels = c("850", "900", "930", "950", "1000", "1050"),
limits = c(845, 1055)) +
scale_color_manual(values = c("green", "orange", "red"))
g10 = tecator_data$dabsorbance |>
as.matrix() |>
cor() |>
melt() |>
mutate(x = Var1,
y = Var2,
z = value,
Var1 = NULL,
Var2 = NULL,
value = NULL) |>
ggplot(mapping = aes(x = x,
y = y,
fill = z)) +
geom_raster() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
size = .25),
axis.ticks = element_line(color = "black",
size = .125),
legend.position = "top",
plot.margin = unit(c(.25, .75, .25, .75), "cm")) +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
fill = "Correlation") +
scale_y_continuous(expand = c(0, 0),
breaks = c(850, 900, 930, 950, 1000, 1050),
labels = c("850", "900", "930", "950", "1000", "1050"),
limits = c(850, 1050)) +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 930, 950, 1000, 1050),
labels = c("850", "900", "930", "950", "1000", "1050"),
limits = c(850, 1050)) +
scale_fill_continuous(type = "viridis")
grid.arrange(g09,
g10,
ncol = 2)
#| fig-cap: "Upper panel: functional boxplots of the absorbance curves. Lower panel: functional boxplots of the derivative of the absorbance curves."
par(mfrow = c(2, 1))
tecator_data$absorbance |> as.matrix(byrow = FALSE) |> t() |>
fbplot(xlab = substitute(paste("Wavelength (in ",italic("nm"),")")),
ylab = substitute("Absorbance"),
family = "LM Roman 10",
axes = F,
ylim = c(1.5, 5.5),
color = "darkgrey",
barcol = "lightgray",
outliercol = "red",
x = tf_arg(tecator_data$absorbance),
xlim = c(850, 1050),
method = "MBD") |> invisible()
axis(side = 2, at = c(-100, 1, 2, 3, 4, 5, 6, 7, 100),
labels = c("a", "1", "2", "3", "4", "5", "6", "7", "b"),
family = "LM Roman 10",
col.axis = "cornsilk4",
las = 2,
cex.axis = .75)
axis(side = 1, at = c(-10, 850, 900, 950, 1000, 1050, 2000),
labels = c("a", "850", "900", "950", "1000", "1050", "b"),
family = "LM Roman 10",
col.axis = "cornsilk4",
las = 1,
cex.axis = .75)
tecator_data$dabsorbance |> as.matrix(byrow = FALSE) |> t() |>
fbplot(xlab = substitute(paste("Wavelength (in ",italic("nm"),")")),
ylab = substitute(paste(italic("D"),"Absorbance")),
family = "LM Roman 10",
axes = F,
ylim = c(-0.02, 0.05),
color = "darkgrey",
barcol = "lightgray",
outliercol = "red",
x = tf_arg(tecator_data$dabsorbance),
xlim = c(850, 1050),
method = "MBD") |> invisible()
axis(side = 2, at = c(-100, -0.02, 0, 0.02, 0.04, 100),
labels = c("a", "-0.02", "0", "0.02", "0.04", "b"),
family = "LM Roman 10",
col.axis = "cornsilk4",
las = 2,
cex.axis = .75)
axis(side = 1, at = c(-10, 850, 900, 950, 1000, 1050, 2000),
labels = c("a", "850", "900", "950", "1000", "1050", "b"),
family = "LM Roman 10",
col.axis = "cornsilk4",
las = 1,
cex.axis = .75)
#| fig-cap: "Upper panel: spaghetti plot of the absorbance curves, separated by fat percentage, with outlier curves highlighted in black; observation $140$ is likewise dashed. Lower panel: spaghetti plot of the derivative of the absorbance curves, separated by fat percentage, with outlier curves highlighted in black."
g11 = g03
g11$data = g11$data[ - c(43, 44, 140, 99, 185) , ]
g11 = g11 + tecator_data[ c(43, 44, 99, 185) , ] |>
geom_spaghetti(mapping = aes(y = absorbance),
col = "black") + tecator_data[ 140 , ] |>
geom_spaghetti(mapping = aes(y = absorbance),
col = "black",
linetype = "dashed")
g12 = g07
g12$data = g07$data[ -140 , ]
g12 = g12 + tecator_data[ 140, ] |>
geom_spaghetti(mapping = aes(y = dabsorbance),
col = "black")
grid.arrange(g11,
g12,
ncol = 2)
#| fig-cap: "Upper panel: mean and median absorbance curves, separated by fat percentage, represented respectively by solid and dashed curves. Lower panel: mean and median derivative of the absorbance curves, separated by fat percentage, represented respectively by solid and dashed curves."
g04 = g04 + tecator_data |>
group_by(fat20) |> summarise(median_absorbance = median(absorbance)) |>
mutate(fat20 = factor(fat20,
levels = c("20% < Fat",
"20% > Fat",
"Overall"))) |>
add_row(fat20 = "Overall",
median_absorbance = median(tecator_data$absorbance)) |>
geom_spaghetti(inherit.aes = F,
mapping = aes(y = median_absorbance,
col = fat20),
linetype = "dashed")
g08 = g08 + tecator_data |>
group_by(fat20) |> summarise(median_dabsorbance = median(dabsorbance)) |>
mutate(fat20 = factor(fat20,
levels = c("20% < Fat",
"20% > Fat",
"Overall"))) |>
add_row(fat20 = "Overall",
median_dabsorbance = median(tecator_data$dabsorbance)) |>
geom_spaghetti(inherit.aes = F,
mapping = aes(y = median_dabsorbance,
col = fat20),
linetype = "dashed")
grid.arrange(g04,
g08,
ncol = 2)
#| fig-cap: "Left panel: raw absorbance curves. Right panel: smoothed absorbance curves."
tecator_data = tecator_data |> mutate(absorbance_basis = tfb(absorbance,
basis = "spline",
bs = "bs",
k = 15,
verbose = FALSE),
dabsorbance_basis = tfb(dabsorbance,
basis = "spline",
bs = "bs",
k = 30,
verbose = FALSE))
g13 = tecator_data |>
ggplot(mapping = aes(y = absorbance_basis,
color = fat20)) +
geom_spaghetti() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
linewidth = .25),
axis.ticks = element_line(color = "black",
linewidth = .125),
legend.position = "top") +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = substitute("Smoothed Absorbance"),
col = "") +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 930, 950, 1000, 1050),
labels = c("850", "900", "930", "950", "1000", "1050"),
limits = c(845, 1055)) +
scale_color_manual(values = c("green", "orange")) +
geom_vline(xintercept = 930,
linetype = "dashed",
col = "black",
alpha = .5)
grid.arrange(g03,
g13,
ncol = 2)
#| fig-cap: "Left panel: raw derivative of the absorbance curves. Right panel: smoothed derivative of the absorbance curves."
g14 = tecator_data |>
ggplot(mapping = aes(y = dabsorbance_basis,
color = fat20)) +
geom_spaghetti() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
linewidth = .25),
axis.ticks = element_line(color = "black",
linewidth = .125),
legend.position = "top") +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = substitute(paste("Smoothed ",italic("D"),"Absorbance")),,
col = "") +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 930, 950, 1000, 1050),
labels = c("850", "900", "930", "950", "1000", "1050"),
limits = c(845, 1055)) +
scale_color_manual(values = c("green", "orange"))
grid.arrange(g07,
g14,
ncol = 2)
#| fig-cap: "Left panel: smoothed absorbance curves on the training set. Right panel: smoothed absorbance curves on the test set."
set.seed(747)
N = nrow(tecator_data)
prop_train = .5
tecator_data = tecator_data |>
mutate(train = sample(x = rep(x = c(1, 0),
times = c(ceiling(N * prop_train),
N - ceiling(N * prop_train)))))
g15 = tecator_data |>
subset(train == 1) |>
ggplot(mapping = aes(y = absorbance_basis,
color = fat20)) +
geom_spaghetti() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
linewidth = .25),
axis.ticks = element_line(color = "black",
linewidth = .125),
legend.position = "top") +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = substitute("Smoothed Absorbance"),
col = "") +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 950, 1000, 1050),
labels = c("850", "900", "950", "1000", "1050"),
limits = c(845, 1055)) +
scale_color_manual(values = c("green", "orange"))
g16 = tecator_data |>
subset(train == 0) |>
ggplot(mapping = aes(y = absorbance_basis,
color = fat20)) +
geom_spaghetti() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
linewidth = .25),
axis.ticks = element_line(color = "black",
linewidth = .125),
legend.position = "top") +
labs(x = expression(paste("Wavelength ", "(in ", italic("nm"), ")")),
y = substitute("Smoothed Absorbance"),
col = "") +
scale_x_continuous(expand = c(0, 0),
breaks = c(850, 900, 950, 1000, 1050),
labels = c("850", "900", "950", "1000", "1050"),
limits = c(845, 1055)) +
scale_color_manual(values = c("green", "orange"))
grid.arrange(g15,
g16,
ncol = 2)
tecator_data = tecator_data |> mutate(dabsorbance_matrix = dabsorbance |> as.matrix(),
fat = fat / 100)
theta_initial = 1
max_iterations = 1
theta_underfit = numeric(max_iterations)
theta_overfit = numeric(max_iterations)
theta_ideal = numeric(max_iterations)
iteration = 1
while(iteration <= max_iterations)
{
fit_underfit = fgam(formula = fat ~ af(X = dabsorbance_matrix,
bs = "tp",
k = 4,
m = 3),
fitter = "gam",
family = betar(link = "probit",
theta = 274.9405),
tensortype = "te",
data = tecator_data,
weights = tecator_data$train,
method = "REML")
fit_overfit = fgam(formula = fat ~ af(X = dabsorbance_matrix,
bs = "tp",
k = 6,
m = 3),
fitter = "gam",
family = betar(link = "probit",
theta = 274.9405),
tensortype = "te",
data = tecator_data,
weights = tecator_data$train,
method = "REML",
scale = 0.05978584 ** -1)
fit_ideal = fgam(formula = fat ~ af(X = dabsorbance_matrix,
bs = "tp",
k = 5,
m = 3),
fitter = "gam",
family = betar(link = "probit",
theta = 274.9405),
tensortype = "te",
data = tecator_data,
weights = tecator_data$train,
method = "REML")
iteration = iteration + 1
}
tecator_data = tecator_data |>
mutate(fat_under = fit_underfit$fitted.values,
fat_over = fit_overfit$fitted.values,
fat_ideal = fit_ideal$fitted.values)
g17 = tecator_data |> select(fat_under, fat_over, fat_ideal, fat, train) |>
melt(id.vars = c("fat",
"train")) |>
mutate(fitted = value,
model = sapply(X = as.character(variable),
switch,
"fat_under" = "Underfit",
"fat_over" = "Overfit",
"fat_ideal" = "Moderate") |>
factor(levels = c("Underfit",
"Overfit",
"Moderate")),
train = factor(x = ifelse(test = train == 1, "Train", "Test"),
levels = c("Train", "Test"))) |>
mutate(value = NULL,
variable = NULL) |>
ggplot(mapping = aes(x = fitted,
y = fat,
color = train)) +
geom_point() +
theme_classic() +
theme(text = element_text(size = unit(11, "pt"),
family = "LM Roman 10",
color = "black"),
axis.line = element_line(arrow = grid::arrow(length = unit(0.08, "cm"),
ends = "last",
angle = 30,
type = "closed"),
linewidth = .25),
axis.ticks = element_line(color = "black",
linewidth = .125),
legend.position = "top") +
labs(x = "Fitted",
y = "True",
col = "") +
scale_color_manual(values = c("blue", "red")) +
scale_x_continuous(expand = c(0, 0),
breaks = c(0, .5, 1),
labels = c("0", "1/2", "1"),
limits = c(0, 1)) +
scale_y_continuous(expand = c(0, 0),
breaks = c(0, .5, 1),
labels = c("0", "1/2", "1"),
limits = c(0, 1)) +
geom_abline(slope = 1,
intercept = 0,
linetype = "dashed") +
facet_wrap(vars(model))
g17
fit = fit_ideal
tecator_data$dabsorbance_matrix
apply(tecator_data$dabsorbance_matrix, 1, sd)
tecator |> subset(train == 1) |> apply(dabsorbance_matrix, 1, sd)
tecator |> subset(train == 1)
tecator_data |> subset(train == 1) |> apply(dabsorbance_matrix, 1, sd)
tecator_data |> subset(train == 1)
tecator_data |> subset(train == 1) |> apply(dabsorbance_matrix, 1, sd)
tecator_data |> subset(train == 1) |> apply(X = dabsorbance_matrix, MARGIN = 1, FUN = sd)
tecator_data |> subset(train == 1) |> apply(MARGIN = 1, FUN = sd)
(tecator_data |> subset(train == 1))$dabsorbance_matrix |> apply(MARGIN = 1, FUN = sd)
(tecator_data |> subset(train == 1))$dabsorbance_matrix |> apply(MARGIN = 2, FUN = sd)
